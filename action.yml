name: "VPN Connect"
description: "Brings up a VPN (IPSec + L2TP) and exposes ppp0 interface"
author: "Alexandre-Roussel48"
runs:
  using: "composite"
  steps:
    - name: Install Required Packages
      shell: bash
      run: |
        sudo apt update
        sudo apt-get install -y strongswan xl2tpd net-tools dnsutils

    - name: Add VPN Configuration
      shell: bash
      run: |
        sudo bash -c 'cat > /etc/ipsec.conf <<EOF
        conn myvpn
          auto=add
          keyexchange=ikev1
          authby=secret
          type=transport
          left=%defaultroute
          leftprotoport=17/1701
          rightprotoport=17/1701
          right=${{ inputs.vpn_gateway }}
          ike=${{ inputs.vpn_ike }}
          esp=${{ inputs.vpn_esp }}
        EOF'

        sudo bash -c 'cat > /etc/ipsec.secrets <<EOF
        : PSK "${{ inputs.vpn_psk }}"
        EOF'

        sudo chmod 600 /etc/ipsec.secrets

        sudo bash -c 'cat > /etc/xl2tpd/xl2tpd.conf <<EOF
        [lac myvpn]
        lns = ${{ inputs.vpn_gateway }}
        ppp debug = yes
        pppoptfile = /etc/ppp/options.l2tpd.client
        length bit = yes
        EOF'

        sudo bash -c 'cat > /etc/ppp/options.l2tpd.client <<EOF
        ipcp-accept-local
        ipcp-accept-remote
        refuse-eap
        require-mschap-v2
        noccp
        noauth
        mtu 1280
        mru 1280
        noipdefault
        defaultroute
        usepeerdns
        connect-delay 5000
        domain "${{ inputs.vpn_nt_domain }}"
        name "${{ inputs.vpn_username }}"
        password "${{ inputs.vpn_password }}"
        EOF'

        sudo chmod 600 /etc/ppp/options.l2tpd.client

    - name: Start VPN
      id: start_vpn
      shell: bash
      run: |
        sudo mkdir -p /var/run/xl2tpd
        sudo touch /var/run/xl2tpd/l2tp-control
        sudo service ipsec restart
        sudo service xl2tpd restart
        sudo ipsec up myvpn
        echo "c myvpn" | sudo tee /var/run/xl2tpd/l2tp-control

        echo "Waiting for ppp0 interface..."
        TIMEOUT=90   # seconds
        COUNT=0
        until ip addr show ppp0 2>/dev/null | grep -q "inet "; do
          if [ $COUNT -ge $TIMEOUT ]; then
            echo "Timeout: ppp0 did not come up after $TIMEOUT seconds"
            exit 1
          fi
          echo "Waiting for ppp0 to be up... ($COUNT/$TIMEOUT)"
          sleep 1
          COUNT=$((COUNT+1))
        done

        PPP_IP=$(ip -4 addr show ppp0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
        echo "ppp0 is up with IP $PPP_IP"
        echo "ppp_interface=ppp0" >> $GITHUB_OUTPUT
        echo "ppp_ip=$PPP_IP" >> $GITHUB_OUTPUT

inputs:
  vpn_gateway:
    required: true
  vpn_psk:
    required: true
  vpn_username:
    required: true
  vpn_password:
    required: true
  vpn_nt_domain:
    required: true
  vpn_ike:
    required: true
  vpn_esp:
    required: true
outputs:
  ppp_interface:
    description: "The VPN interface name"
    value: ${{ steps.start_vpn.outputs.ppp_interface }}
  ppp_ip:
    description: "The VPN interface IP address"
    value: ${{ steps.start_vpn.outputs.ppp_ip }}
